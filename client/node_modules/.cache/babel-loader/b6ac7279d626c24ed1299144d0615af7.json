{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\VSC\\\\Dojo\\\\MERN\\\\free\\\\base\\\\client\\\\src\\\\Views\\\\UpdateAuthor.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateAuthor = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const history = useHistory(); //ARRAY FOR ERRORS\n\n  const [errors, setErrors] = useState([]);\n  console.log(id);\n  useEffect(() => {\n    axios.get('http://localhost:8000/authors/' + id).then(res => {\n      setFirstName(res.data.firstName);\n      setLastName(res.data.lastName);\n    });\n  }, []);\n\n  const updateAuthorHandler = e => {\n    e.preventDefault();\n    const formData = {\n      firstName,\n      lastName\n    };\n    axios.put('http://localhost:8000/authors/' + id, formData) // SUCCESS POST\n    .then(response => {\n      console.log(response);\n      setErrors([]);\n      history.push('/authors');\n    }) // FAIL POST\n    .catch(err => {\n      const errorResponse = err.response.data.errors;\n      console.log(errorResponse);\n      const errorArr = []; // LOOP THROUGH ALL ERRORS AND GET MESSAGES\n\n      for (const key of Object.keys(errorResponse)) {\n        errorArr.push(errorResponse[key].message);\n      }\n\n      setErrors(errorArr);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Update Author\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateAuthorHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"First Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          value: firstName,\n          onChange: e => setFirstName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Last Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          value: lastName,\n          onChange: e => setLastName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), errors.map((err, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: err\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 41\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateAuthor, \"DceVaujRhD8NiQj+4oYwAibXE6g=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = UpdateAuthor;\nexport default UpdateAuthor;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateAuthor\");","map":{"version":3,"sources":["C:/Users/alexa/VSC/Dojo/MERN/free/base/client/src/Views/UpdateAuthor.jsx"],"names":["React","useEffect","useState","axios","useParams","useHistory","UpdateAuthor","props","id","firstName","setFirstName","lastName","setLastName","history","errors","setErrors","console","log","get","then","res","data","updateAuthorHandler","e","preventDefault","formData","put","response","push","catch","err","errorResponse","errorArr","key","Object","keys","message","target","value","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n\r\nconst UpdateAuthor = (props) => {\r\n    const {id} = useParams()\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const history = useHistory()\r\n\r\n    //ARRAY FOR ERRORS\r\n    const [errors, setErrors] = useState([])\r\n\r\n    console.log(id)\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/authors/'+id)\r\n            .then(res => {\r\n                setFirstName(res.data.firstName)\r\n                setLastName(res.data.lastName)\r\n            })\r\n    }, [])\r\n\r\n    const updateAuthorHandler = e => {\r\n        e.preventDefault()\r\n        const formData = {\r\n            firstName,\r\n            lastName\r\n        }\r\n        \r\n        axios.put('http://localhost:8000/authors/'+id, formData)\r\n            // SUCCESS POST\r\n            .then(response => {\r\n                console.log(response)\r\n                setErrors([])\r\n                history.push('/authors')\r\n            })\r\n            // FAIL POST\r\n            .catch(err => {\r\n                const errorResponse  = err.response.data.errors\r\n                console.log(errorResponse)\r\n                const errorArr = []\r\n                // LOOP THROUGH ALL ERRORS AND GET MESSAGES\r\n                for (const key of Object.keys(errorResponse)) {\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                setErrors(errorArr)\r\n            })\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h4>Update Author</h4>\r\n            <form onSubmit={ updateAuthorHandler }>\r\n                <p>\r\n                    <label>First Name:</label>\r\n                    <input type=\"text\" \r\n                    name=\"firstName\"\r\n                    value={firstName}\r\n                    onChange={e=> setFirstName(e.target.value)} />\r\n                </p>\r\n                <p>\r\n                    <label>Last Name:</label>\r\n                    <input type=\"text\" \r\n                    name=\"lastName\"\r\n                    value={lastName}\r\n                    onChange={e=> setLastName(e.target.value)} />\r\n                </p>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n            {errors.map((err, index) => <p key={index} className=\"text-danger\">{err}</p>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateAuthor"]},"metadata":{},"sourceType":"module"}