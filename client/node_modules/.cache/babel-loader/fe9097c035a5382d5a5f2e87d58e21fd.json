{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\VSC\\\\Dojo\\\\MERN\\\\free\\\\base\\\\client\\\\src\\\\Components\\\\AuthorForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthorForm = props => {\n  _s();\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const history = useHistory(); //ARRAY FOR ERRORS\n\n  const [errors, setErrors] = useState([]);\n\n  const formSubmit = e => {\n    e.preventDefault();\n    const formData = {\n      firstName,\n      lastName\n    };\n    axios.post('http://localhost:8000/authors/new', formData) // SUCCESS POST\n    .then(response => {\n      console.log(response);\n      setErrors([]);\n      history.push('/authors');\n    }) // FAIL POST\n    .catch(err => {\n      const errorResponse = err.response.data.errors;\n      console.log(errorResponse);\n      const errorArr = []; // LOOP THROUGH ALL ERRORS AND GET MESSAGES\n\n      for (const key of Object.keys(errorResponse)) {\n        errorArr.push(errorResponse[key].message);\n      }\n\n      setErrors(errorArr);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"First Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setFirstName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Last Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setLastName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), errors.map((err, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: err\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 41\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthorForm, \"BRClfo5yYQ0ma5v7mlEvSmJIlfg=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthorForm;\nexport default AuthorForm; // Player.find().collation({locale:'en',strength: 2}).sort({name:1})\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthorForm\");","map":{"version":3,"sources":["C:/Users/alexa/VSC/Dojo/MERN/free/base/client/src/Components/AuthorForm.js"],"names":["React","useState","axios","useHistory","AuthorForm","props","firstName","setFirstName","lastName","setLastName","history","errors","setErrors","formSubmit","e","preventDefault","formData","post","then","response","console","log","push","catch","err","errorResponse","data","errorArr","key","Object","keys","message","target","value","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMS,OAAO,GAAGP,UAAU,EAA1B,CAH0B,CAK1B;;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMY,UAAU,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG;AACbV,MAAAA,SADa;AAEbE,MAAAA;AAFa,KAAjB;AAKAN,IAAAA,KAAK,CAACe,IAAN,CAAW,mCAAX,EAAgDD,QAAhD,EACI;AADJ,KAEKE,IAFL,CAEUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAP,MAAAA,SAAS,CAAC,EAAD,CAAT;AACAF,MAAAA,OAAO,CAACY,IAAR,CAAa,UAAb;AACH,KANL,EAOI;AAPJ,KAQKC,KARL,CAQWC,GAAG,IAAI;AACV,YAAMC,aAAa,GAAID,GAAG,CAACL,QAAJ,CAAaO,IAAb,CAAkBf,MAAzC;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYI,aAAZ;AACA,YAAME,QAAQ,GAAG,EAAjB,CAHU,CAIV;;AACA,WAAK,MAAMC,GAAX,IAAkBC,MAAM,CAACC,IAAP,CAAYL,aAAZ,CAAlB,EAA8C;AAC1CE,QAAAA,QAAQ,CAACL,IAAT,CAAcG,aAAa,CAACG,GAAD,CAAb,CAAmBG,OAAjC;AACH;;AACDnB,MAAAA,SAAS,CAACe,QAAD,CAAT;AACH,KAjBL;AAkBH,GAzBD;;AA2BA,sBACI;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAGd,UAAjB;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEC,CAAC,IAAGP,YAAY,CAACO,CAAC,CAACkB,MAAF,CAASC,KAAV;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEnB,CAAC,IAAGL,WAAW,CAACK,CAAC,CAACkB,MAAF,CAASC,KAAV;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAYKtB,MAAM,CAACuB,GAAP,CAAW,CAACV,GAAD,EAAMW,KAAN,kBAAgB;AAAe,MAAA,SAAS,EAAC,aAAzB;AAAA,gBAAwCX;AAAxC,OAAQW,KAAR;AAAA;AAAA;AAAA;AAAA,YAA3B,CAZL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAnDD;;GAAM/B,U;UAGcD,U;;;KAHdC,U;AAqDN,eAAeA,UAAf,C,CAEA","sourcesContent":["import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst AuthorForm = (props) => {\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const history = useHistory()\r\n\r\n    //ARRAY FOR ERRORS\r\n    const [errors, setErrors] = useState([])\r\n\r\n    const formSubmit = e => {\r\n        e.preventDefault()\r\n        const formData = {\r\n            firstName,\r\n            lastName\r\n        }\r\n        \r\n        axios.post('http://localhost:8000/authors/new', formData)\r\n            // SUCCESS POST\r\n            .then(response => {\r\n                console.log(response)\r\n                setErrors([])\r\n                history.push('/authors')\r\n            })\r\n            // FAIL POST\r\n            .catch(err => {\r\n                const errorResponse  = err.response.data.errors\r\n                console.log(errorResponse)\r\n                const errorArr = []\r\n                // LOOP THROUGH ALL ERRORS AND GET MESSAGES\r\n                for (const key of Object.keys(errorResponse)) {\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                setErrors(errorArr)\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={ formSubmit }>\r\n                <p>\r\n                    <label>First Name:</label>\r\n                    <input type=\"text\" onChange={e=> setFirstName(e.target.value)} />\r\n                </p>\r\n                <p>\r\n                    <label>Last Name:</label>\r\n                    <input type=\"text\" onChange={e=> setLastName(e.target.value)} />\r\n                </p>\r\n                <input type=\"submit\" value=\"Create\" />\r\n            </form>\r\n            {errors.map((err, index) => <p key={index} className=\"text-danger\">{err}</p>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthorForm\r\n\r\n// Player.find().collation({locale:'en',strength: 2}).sort({name:1})\r\n"]},"metadata":{},"sourceType":"module"}